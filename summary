#!/bin/sh

#Check if the --help flag is present
if [[ "$1" == "--help" ]]; then

#Print the usage instructions
  printf "Usage: gs summary [OPTION]\n\n"
  printf "Print a summary of the current git repository.\n\n"
  printf "Options:\n"
  printf "  --help\t\tdisplay this help and exit\n"

#Exit the script
exit 0
fi

  # Check if the git command exists
  if git --help >/dev/null 2>&1; then
  # The name of the current branch
  current_branch=$(git symbolic-ref --short -q HEAD)
  # Set the color based on the branch name
if [[ $current_branch == "main" ]]; then
  color="\033[0;31m" # Red
elif [[ $current_branch == *"/"* ]]; then
  color="\033[0;33m" # Yellow
else
  color="\033[0;32m" # Green
fi

  # The number of commits on the current branch
  commit_count=$(git rev-list --count HEAD)

  # The number of files in the repository
  file_count=$(git ls-files | wc -l)

  # The total number of lines of code in the repository
  lines_of_code=$(git ls-files | xargs wc -l | awk '{total += $1} END {print total}')

  # The number of untracked files in the repository
  untracked_count=$(git ls-files --others --exclude-standard | wc -l)

  # The size of the repository (in bytes)
  repo_size=$(du -s .git | cut -f1)

  # The summary
  printf "On branch: $color%s\033[0m\n" "$current_branch"
  printf "No. of Commits: %d\n" "$commit_count"
  printf "No. of files: %d\n" "$file_count"
  printf "Lines of code: %d\n" "$lines_of_code"
  printf "No. of untracked files: %d\n" "$untracked_count"
  printf "Repository size: %d bytes\n" "$repo_size"
  else
    # If the git command doesn't exist, print an error message
    printf "Error: git command not found\n"
  fi
